import { MenuButtonContextName, type MenuButtonContext } from "./MenuTypes";

interface MenuIndicatorProps {
	/** An ID for the root element */
	id?: string;
	/** Class name(s) for the root element */
	class?: string,
	/** Whether this item is disabled */
	disabled?: boolean,
}

/**
 * An indicator for a MenuCheck or MenuRadio component, which is displayed
 * when the value of checked is true.
 */ 
export default function MenuIndicator($props: MenuIndicatorProps | undefined) {
	// Get stuff out of the MenuButtonContext
	const context = $context[MenuButtonContextName] as MenuButtonContext;
	if (!context) {
		throw new Error("MenuIndicator must be contained within a MenuCheck or MenuRadio");
	}
	let $state = context.state;

	@render {
		@if ($state.checked) {
			<div
				{$props?.id}
				class={`torp-menu-indicator ${$props?.class ?? ""}`.trim()}
				aria-disabled={$props?.disabled ? "true" : undefined}
				data-disabled={$props?.disabled ? "true" : undefined}
			>
				<slot />
			</div>
		}
	}
}
