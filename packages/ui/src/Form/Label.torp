import { FieldContextName, type FieldContext } from "./FormTypes";

interface LabelProps {
	/** An ID for the root element */
	id?: string;
	/** Class name(s) for the root element */
	class?: string,
}

/**
 * A label to describe the contents of an input in a form.
 */
export default function Label($props?: LabelProps) {
	// Get stuff out of the FieldContext
	const context = $context[FieldContextName] as FieldContext;
	if (!context) {
		throw new Error("Label must be contained within a Field");
	}
	let { state: $state } = context;

	@render {
		<label
			{$props?.id}
			class={`torp-label ${$props?.class ?? ""}`.trim()}
			for={$state.inputId}
			data-valid={$state.valid ? "valid" : "invalid"}
		>
			<slot />
		</label>
	}
}
