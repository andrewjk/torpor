import { FieldContextName, type FieldContext } from "./FormTypes";

interface MessageProps {
	/** An ID for the root element */
	id?: string;
	/** Class name(s) for the root element */
	class?: string,
}

/**
 * A validation message to show when the contents of an input component have
 * problems that need to be fixed.
 */
export default function Message($props?: MessageProps) {
	// Get stuff out of the FieldContext
	const context = $context[FieldContextName] as FieldContext;
	if (!context) {
		throw new Error("Message must be contained within a Field");
	}
	const { state: $state } = context;

	@render {
		@if ($state.message) {
			<div 
				{$props?.id}
				class={`torp-message ${$props?.class ?? ""}`.trim()}
				data-valid={$state.valid ? "valid" : "invalid"}
			>
				<slot name="message">
					{$state.message}
				</slot>
			</div>
		}
	}
}
