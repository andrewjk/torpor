import getId from "../utils/getId";
import { TabGroupContextName, type TabGroupContext } from "./TabGroupTypes";

interface TabContentProps {
	/** An ID for the root element */
	id?: string;
	/** Class name(s) for the root element */
	class?: string,
}

/**
 * Content for a TabGroup, which can be revealed or hidden by an associated TabTrigger.
 */
export default function TabContent($props: TabContentProps) {
	$props ??= $watch({});
	$props.id ||= getId();

	const context = $context[TabGroupContextName] as TabGroupContext;
	if (!context) {
		throw new Error("TabContent must be contained within a TabGroup");
	}
	let $state = context.registerItem($props.index, $props.value);

	// Set the content ID so that it can be used with aria-controls in TabTrigger
	$state.contentId = $props.id;

	@render {
		<div
			{$props.id}
			class={`torp-tab-content ${$props.class ?? ""}`.trim()}
			role="tabpanel"
			aria-labelledby={$state.headerId}
			data-orientation={$props.orientation}
			data-state={$state.dataState}
			data-disabled={$state.disabled ? "true" : undefined}
		>
			@if ($state.active) {
				<slot />
			}
		</div>
	}
}
