import getId from "../utils/getId";
import { DialogContextName, type DialogContext } from "./DialogTypes";

interface DialogBodyProps {
	/** An ID for the root element */
	id?: string;
	/** Class name(s) for the root element */
	class?: string,
	/** Whether the body content will be announced by screen readers when the Dialog is opened */
	ariaAnnounce?: boolean,
}

/**
 * The body information for a Dialog. Content in the body will be announced by
 * screen readers when the Dialog is opened, unless ariaAnnounce is false.
 */
export default function DialogBody($props: DialogBodyProps) {
	$props ??= $watch({});
	$props.id ??= getId();
	$props.ariaAnnounce ??= true;

	// Get stuff out of the DialogContext
	const context = $context[DialogContextName] as DialogContext;
	if (!context) {
		throw new Error("DialogBody must be contained within a Dialog");
	}
	let $state = context.state;

	// Set the body id for using in the Dialog's ARIA attributes
	if ($props.ariaAnnounce) {
		$state.bodyId = $props.id;
	}

	@render {
		<div
			{$props.id} 
			class={`torp-dialog-body ${$props.class ?? ""}`.trim()}
		>
			<slot />
		</div>
	}
}
